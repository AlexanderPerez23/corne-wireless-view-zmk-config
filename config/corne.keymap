/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
#define MACRO(name, keys)                 \
name: name##_macro {                      \
    label          = #name;               \
    compatible     = "zmk,behavior-macro";\
    tap-ms         = <1>;                 \
    wait-ms        = <1>;                 \
    #binding-cells = <0>;                 \
    bindings       = <keys>;              \
};

/ {
    macros {
        MACRO(undo_macro, &kp LC(Z))
        MACRO(cut_macro,  &kp LC(X))
        MACRO(copy_macro, &kp LC(C))
	MACRO(paste_macro, &kp LC(V))
	MACRO(redo_macro, &kp LC(Y))
	MACRO(q_mark, &kp LS(FSLH))
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
			bindings = <
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |    TAB    |     '     |     ,     |     .     |     P     |     Y    |      |     F     |     G      |     C     |     R     |     L     |    DEL    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
    &kp TAB      &kp SQT     &kp COMMA   &kp DOT      &kp P        &kp Y             &kp F        &kp G       &kp C       &kp R        &kp L     &kp DEL
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |     ESC   |     A     |     O     |     E     |     U     |     I    |      |     D     |     H      |     T     |     N     |     S     |    BKP    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
      &kp ESC      &kp A      &kp O        &kp E       &kp U       &kp I           &kp D         &kp H        &kp T       &kp N       &kp S      &kp BSPC
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |    SHFT   |     ;     |     Q     |     J     |     K     |     X    |      |     B     |     M      |     W     |     V     |     Z     |    GUI    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
     &kp LSHFT   &kp SEMI      &kp Q       &kp J       &kp K       &kp X             &kp B        &kp M       &kp W       &kp V        &kp Z     &kp LWIN
//                                     ____________________________________      ______________________________________
//                                     |           |           |          |      |           |            |           |
//                                     |   LCTRL   |    LWR    |    SPC   |      |   ENTSFT  |    RSE     |    ALT    |
                                        &kp LCTRL       &mo 2   &kp SPACE       &mt LSHFT RET    &mo 1       &kp RALT                                      
                        >;
                };

 		lower_layer {
                        bindings = <
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |     `     |     !     |     @     |     #     |     $     |     %    |      |     F     |     7      |     8     |     9     |     .     |    DEL    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
     &kp GRAVE    &kp EXCL    &kp AT     &kp HASH    &kp DLLR   &kp PRCNT           &trans       &kp N7      &kp N8       &kp N9      &kp DOT    &trans
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |     ~     |     +     |     -     |     *     |     /     |     =    |      |     D     |     4      |     5     |     6     |     0     |    BKP    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
     &kp TILDE    &kp PLUS  &kp MINUS    &kp ASTRK   &kp FSLH    &kp EQUAL          &trans       &kp N4       &kp N5      &kp N6      &kp N0     &trans
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |     ?     |     &     |     _     |     ^     |     \     |     |    |      |     B     |     1      |     2     |     3     |     ,     |    GUI    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
        &q_mark   &kp AMPS   &kp UNDER   &kp CARET   &kp BSLH    &kp PIPE          &trans        &kp N1       &kp N2      &kp N3    &kp COMMA    &trans
//                                     ____________________________________      ______________________________________
//                                     |           |           |          |      |           |            |           |
//                                     |   LCTRL   |    LWR    |    SPC   |      |   ENTSFT  |    RSE     |    ALT    |
                                          &trans      &trans      &trans             &trans      &trans       &trans
                                         
                        >;
                };

                raise_layer {
                        bindings = <
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |     `     |     !     |   Home    |     Up    |    End    |   PScrn  |      |     F     |     (      |     )     |     9     |     .     |    DEL    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
      &trans       &trans    &kp HOME     &kp UP      &kp END   &kp PSCRN           &trans      &kp LPAR    &kp RPAR     &trans       &trans     &trans
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |     ~     |   redo    |   Left    |   Down    |   Right   |     =    |      |     D     |     [      |     ]     |     6     |     0     |    BKP    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
      &trans    &redo_macro  &kp LEFT    &kp DOWN    &kp RIGHT    &trans             &trans     &kp LBKT     &kp RBKT    &trans       &trans     &trans
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |     ?     |   undo    |    cut    |    copy   |   paste   |     |    |      |     B     |     {      |     }     |     3     |     ,     |    GUI    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
       &trans   &undo_macro &cut_macro  &copy_macro &paste_macro  &trans             &trans     &kp LBRC     &kp RBRC     &trans      &trans     &trans
//                                     ____________________________________      ______________________________________
//                                     |           |           |          |      |           |            |           |
//                                     |   LCTRL   |    LWR    |    SPC   |      |   ENTSFT  |    RSE     |    ALT    |
                                           &trans     &trans       &trans            &trans      &trans       &trans
                        >;
                };
 
        conditional_layer {
                        bindings = <
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |     F1    |    F2     |    F3     |    F4     |    F5     |    F6    |      |    F7     |    F8      |    F9     |    F10    |    F11    |    F12    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
      &kp F1       &kp F2      &kp F3      &kp F4     &kp F5      &kp F6            &kp F7       &kp F8       &kp F9     &kp F10    &kp F11      &kp F12
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |  BT_CLR   |    BT1    |    BT2    |    BT3    |           |     I    |      |  scrl_u   |   lclk     |     m_up  |   rclk    |     S     |    BKP    |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2   &trans     &trans         &msc SCRL_UP   &mkp LCLK &mmv MOVE_UP  &mkp RCLK      &trans      &trans
// ________________________________________________________________________      __________________________________________________________________________
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
// |    Mute   |    Vol+   |   Vol-    |Play/Pause |    Prev   |   Next   |      |  scrl_d   |   m_lft    |   m_dn    |  mv_rgt   |     Z     |  RGB_TOG  |
// |           |           |           |           |           |          |      |           |            |           |           |           |           |
     &kp C_MUTE &kp C_VOL_UP &kp C_VOL_DN &kp C_PP   &kp C_PREV  &kp C_NEXT   &msc SCRL_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT     &trans     &out OUT_TOG
//                                     ____________________________________      ______________________________________
//                                     |           |           |          |      |           |            |           |
//                                     |   LCTRL   |    LWR    |    SPC   |      |   ENTSFT  |    RSE     |    ALT    |
                                          &trans     &trans       &trans            &trans      &trans       &trans                
                        >;

                };

        };
};
